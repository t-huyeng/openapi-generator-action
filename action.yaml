name: "Deutschland Generator Action"
description: "Generates a client library and docs from an OpenAPI description"
branding:
  icon: target
  color: green

inputs:
  openapi-file:
    description: The path to the OpenAPI document to generate a client library for
    required: true
    default: openapi.yaml
  package-name:
    description: Name of the package
    required: true
    default: 'undefined'
  version:
    description: Name of the package
    required: true
    default: '1.0.0'

runs:
  using: composite
  steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Checkout
      uses: actions/checkout@v2

    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.7


    - name: "Clean up existing generated code"
      run: |
        rm -rf ${{ github.workspace }}/python-client

    # Runs a single command using the runners shell
    - name: "Check if file is correct"
      uses: stoplightio/spectral-action@v0.8.1
      with:
        file_glob: openapi.yaml
        spectral_ruleset: ${{ github.action_path }}/spectral.yaml

    - name: "Generate Python Client"
      uses: openapi-generators/openapitools-generator-action@v1
      with:
        generator: python
        openapi-file: openapi.yaml
        config-file: generator_config.yaml

    - name: "Print dir after generation"
      run: |
        ls ${{ github.workspace }}
        ls ${{ github.workspace }}/python-client

    - name: "execute py script" # run the run.py to get the latest data
      run: |
        python rename_generated_code.py  ${{ inputs.package-name }}

    - name: Print python-client dir after renaming and move it into the deutschland subfolder
      run: |
        echo "======================== Python client ===================================="
        ls ${{ github.workspace }}/python-client
        mkdir -p ${{ github.workspace }}/python-client/deutschland
        mv ${{ github.workspace }}/python-client/autobahn ${{ github.workspace }}/python-client/deutschland/autobahn
        cp ${{ github.action_path }}/__init__.py.template  ${{ github.workspace }}/python-client/deutschland/__init__.py
        echo "======================= Python client / Deutschland ======================"
        ls ${{ github.workspace }}/python-client/deutschland

    - name: "generate sphinx-documentation"
      run: |
        pip install sphinx m2r2
        python create_doc.py ${{ inputs.package-name }} ${{ inputs.version }} de #TODO: lang also as input?

    - uses: actions/upload-artifact@v2
      with:
        name: "documentation"
        path: ${{ github.workspace }}/python-client/sphinx-docs/_build # or path/to/artifact


    - name: "Delete generated sphinx doc after upload"
      run: |
        rm -rf ${{ github.workspace }}/python-client/sphinx-docs/_build

    - name: Add and Commit files
      run: |
        git config --local user.email "bundesAPI@users.noreply.github.com"
        git config --local user.name "bundesbot"
        git add --force -- ${{ github.workspace }}/python-client
        git commit -m "Generate newest code from openapi.yaml" -a
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ github.token }}
        branch: ${{ github.ref }}

    - name: Install pypa/build and twine for uploading
      run: >-
        python -m
        pip install
        build twine
        --user

    - name: Build a binary wheel and a source tarball using build module
      run: |
        cd ${{ github.workspace }}/python-client
        python -m build --sdist --wheel --outdir dist/

    - uses: actions/upload-artifact@v2
      with:
        name: "postprocessed-code"
        path: ${{ github.workspace }}/python-client # or path/to/artifact

    # Upload to TestPyPI
    - name: Upload to TestPyPI using twine
      run: |
        cd ${{ github.workspace }}/python-client
        python -m twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        TWINE_REPOSITORY: testpypi